name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags, e.g., v1.0.0
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]  # Specify the OS for the build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'  # Set your required Python version

      - name: Install dependencies
        run: |
          pip install -r requirements.txt  # Adjust as needed for your project
          pip install pyinstaller  # Install PyInstaller

      - name: Build the application
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            pyinstaller --onefile --windowed --icon=res/appIcon.ico -n anyGIF main.py
          else
            pyinstaller --onefile --windowed --icon=res/appIcon.ico -n anyGIF main.py
          fi

      - name: Archive artifacts
        if: success()  # Only archive if the build was successful
        uses: actions/upload-artifact@v2
        with:
          name: anyGIF-${{ runner.os }}
          path: dist/anyGIF.exe  # Change this to your specific executable name for Windows
          path: dist/anyGIF  # Linux executable without extension

  release:
    runs-on: ubuntu-latest
    needs: build
    if: success()  # Only run if the build job succeeded
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}  # Use the version tag from the push
          release_name: Release ${{ github.ref }}
          body: |
            Automatic release for version ${{ github.ref }}.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          files: |
            dist/anyGIF.exe
            dist/anyGIF
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
